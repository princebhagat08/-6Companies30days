class Solution {
    public int binarySearch(ArrayList<Integer> list, int target){
        int low = 0;
        int high = list.size()-1;
        if(list.size() == 0) return 0;
        while(low<=high){
            int mid = low + (high-low)/2;
            if(list.get(mid)>=target){
                high = mid-1;
            }else{
                low = mid+1;
            }

        }
        return low;
    }

    public int maxEnvelopes(int[][] envelopes) {
        Arrays.sort(envelopes,(a,b)-> {
            if(a[0]==b[0]) return Integer.compare(b[1],a[1]);
            return Integer.compare(a[0],b[0]);
        });
      

        ArrayList<Integer> list = new ArrayList();

        for(int i = 0; i < envelopes.length; i++){
            int pos = binarySearch(list,envelopes[i][1]);
            if(pos<list.size()){
                list.set(pos,envelopes[i][1]);
            }else{
                list.add(envelopes[i][1]);
            }
            
        }

        return list.size();
      
        

        
    }
}