class Solution {
    public long maximumSubarraySum(int[] nums, int k) {
        int n = nums.length;

        int i = 0;
        int j = 0;
        long maxSum = 0;
        long tempSum = 0;
         int count = 0;
        Set<Integer> keys = new HashSet();
        while(j<n){

           if(keys.contains(nums[j])){
            count--;
            tempSum -= nums[i];
            keys.remove(nums[i]);
            i++;
           }else{
            keys.add(nums[j]);
            tempSum += nums[j];
            count++;
            j++;
           }

           if(count == k ){
            if(tempSum>maxSum) {
                maxSum = tempSum;
            }
            tempSum -= nums[i];
            count--;
            keys.remove(nums[i]);
            i++;
           }

            
        }

        return maxSum;
        
    }
}